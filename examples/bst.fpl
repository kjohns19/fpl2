bstsort arr cmpfun 2 fun
    insert nodeptr value cmpfun 3 fun
        if nodeptr deref none == then
            newnode heap =
            newnode deref obj =
            newnode deref "value" at value =
            newnode deref "left" at none =
            newnode deref "right" at none =
            nodeptr deref newnode =
            none return
        end
        insert $ deref "insert" at =
        node nodeptr deref =
        cmp value node deref "value" at cmpfun call =
        if cmp 0 < then
            node deref "left" at ref value cmpfun insert call
            none return
        end
        if cmp 0 > then
            node deref "right" at ref value cmpfun insert call
            none return
        end
    end =

    visit_tree arr node 2 fun
        if node none != then
            visit_tree $ deref "visit_tree" at =
            arr node deref "left" at visit_tree call
            sz arr deref "size" at =
            arr deref sz at node deref "value" at =
            arr deref "size" at sz 1 + =
            arr node deref "right" at visit_tree call
        end
    end =

    delete_tree node 1 fun
        if node none != then
            delete_tree $ deref "delete_tree" at =
            node deref "left" at delete_tree call
            node deref "right" at delete_tree call
            node deref delete
        end
    end =

    root none =
    
    i 0 =
    sz arr deref "size" at =
    while i sz < do
        insert ref root ref arr deref i at cmpfun insert call
        i i 1 + =
    end

    arr deref "size" at 0 =
    visit_tree ref arr root visit_tree call
    delete_tree ref root delete_tree call
end =

cmpfun a b 2 fun
    a b - return
end =

arr obj =
arr.size 0 =

0 seed

"Enter number of values to add:" print
size get num =
"Adding " size str + " values" + print
while arr.size size < do
    value 0 1000 rand =
    value print
    arr arr.size at value =
    arr.size arr.size 1 + =
end

"Sorting..." print
arr ref cmpfun bstsort call

"Printing..." print
i 0 =
while i arr.size < do
    arr i at print
    i i 1 + =
end
